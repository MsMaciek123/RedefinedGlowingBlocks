plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.github.MsMaciek123'
version = '1.1.0'

repositories {
    mavenCentral()
    maven { url 'https://repo.codemc.io/repository/maven-releases/' }
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url 'https://jitpack.io'
    }
    mavenLocal()
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20-R0.1-SNAPSHOT'
    compileOnly 'com.github.retrooper.packetevents:spigot:2.3.0'
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    implementation 'com.github.MsMaciek123:ReversibleHashMap:1.0.0'
    implementation 'com.oracle.coherence.ce:coherence:22.06.8'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

shadowJar {
    minimize()

    if (project.hasProperty('shadowJar_destinationDirectory')) {
        destinationDirectory.set(file(getProperty('shadowJar_destinationDirectory')))
    }

    archiveFileName = "${project.name}-${project.version}.jar"
    exclude "hotswap-agent.properties"
}
